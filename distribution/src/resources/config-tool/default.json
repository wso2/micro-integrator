{
  "server.hot_deployment": false,
  "server.enableMTOM": false,
  "server.enableSwA": false,
  "server.userAgent": "WSO2 Micro Integrator 1.0.0",
  "server.serverDetails": "WSO2 Micro Integrator 1.0.0",
  "server.synapse_config_file_path": "repository/deployment/server/synapse-configs",
  "server.hide_admin_service_wsdl": true,

  "encryption.internal_crypto_provider": "org.wso2.micro.integrator.crypto.provider.KeyStoreBasedInternalCryptoProvider",
  "encryption.key": "SECRET_KEY",

  "super_admin.create_admin_account": true,
  "super_admin.admin_role": "admin",
  "super_admin.username": "admin",
  "super_admin.password": "admin",
  "realm_manager": {
    "data_source": "WSO2CarbonDB",
    "properties": {
      "isCascadeDeleteEnabled": true
    }
  },

  "synapse_properties.'synapse.threads.core'": "20",
  "synapse_properties.'synapse.threads.max'": "100",
  "synapse_properties.'synapse.global_timeout_interval'": "120000",
  "synapse_properties.'synapse.commons.json.preserve.namespace'": false,
  "synapse_properties.'synapse.temp_data.chunk.size'": "3072",
  "synapse_properties.'synapse.xpath.func.extensions'": "org.wso2.micro.integrator.mediation.security.vault.xpath.SecureVaultLookupXPathFunctionProvider",
  "synapse_properties.'synapse.debugger.port.command'": "9005",
  "synapse_properties.'synapse.debugger.port.event'": "9006",
  "synapse_properties.'synapse.script.mediator.pool.size'": "15",
  "synapse_properties.'mediation.flow.statistics.enable'": false,
  "synapse_properties.'mediation.flow.statistics.collect.all'": false,
  "synapse_properties.'mediation.flow.statistics.tracer.collect.payloads'": false,
  "synapse_properties.'mediation.flow.statistics.tracer.collect.properties'": false,
  "synapse_properties.'internal.http.api.enabled'": true,
  "synapse_properties.'internal.http.api.port'": "9191",
  "synapse_properties.'internal.https.api.port'": "9154",
  "synapse_properties.'statistics.clean.enable'": true,
  "synapse_properties.'statistics.clean.interval'": "1000",
  "synapse_properties.'inbound.threads.core'": "20",
  "synapse_properties.'inbound.threads.max'": "100",

  "passthru_properties.'http.socket.timeout'": "180000",
  "passthru_properties.'worker_pool_size_core'": "400",
  "passthru_properties.'worker_pool_size_max'": "400",
  "passthru_properties.'worker_pool_queue_length'": "-1",
  "passthru_properties.'io_buffer_size'": "16384",
  "passthru_properties.'http.max.connection.per.host.port'": "32767",
  "passthru_properties.'http.user.agent.preserve'": false,
  "passthru_properties.'http.server.preserve'": true,
  "passthru_properties.'http.connection.disable.keepalive'": false,
  "passthru_properties.'valid.max.message.size.in.bytes'": "81920",
  "passthru_properties.'force.json.message.reverseProxyMode'": false,

  "transport.http.preserve_http_headers": ["Content-Type"],
  "transport.http.listener.enable": true,
  "transport.http.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpListener",
  "transport.http.listener.parameter.port": "8280",
  "transport.http.listener.parameter.httpGetProcessor": "org.wso2.micro.integrator.transport.handlers.PassThroughNHttpGetProcessor",
  "transport.http.listener.secured_enable": true,
  "transport.https.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLListener",
  "transport.https.listener.parameter.port": "8243",
  "transport.https.listener.parameter.HttpsProtocols": "TLSv1,TLSv1.1,TLSv1.2",
  "transport.https.listener.parameter.httpGetProcessor": "org.wso2.micro.integrator.transport.handlers.PassThroughNHttpGetProcessor",
  "transport.http.listener.ssl_profile.read_interval": "3600000",
  "transport.http.listener.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.http.listener.keystore.type": "$ref{keystore.tls.type}",
  "transport.http.listener.keystore.password": "$ref{keystore.tls.password}",
  "transport.http.listener.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.http.listener.truststore.file_name": "repository/resources/security/$ref{truststore.file_name}",
  "transport.http.listener.truststore.type": "$ref{truststore.type}",
  "transport.http.listener.truststore.password": "$ref{truststore.password}",

  "transport.http.sender.enable": true,
  "transport.http.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSender",
  "transport.http.sender.secured_enable": true,
  "transport.https.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLSender",
  "transport.http.sender.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.http.sender.keystore.type": "$ref{keystore.tls.type}",
  "transport.http.sender.keystore.password": "$ref{keystore.tls.password}",
  "transport.http.sender.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.http.sender.truststore.file_name": "repository/resources/security/$ref{truststore.file_name}",
  "transport.http.sender.truststore.type": "$ref{truststore.type}",
  "transport.http.sender.truststore.password": "$ref{truststore.password}",
  "transport.http.sender.ssl_profile.read_interval": "600000",

  "transport.blocking.http.listener.enable": true,
  "transport.blocking.http.listener.parameter.port": "8200",

  "transport.blocking.http.sender.enable": true,
  "transport.blocking.http.sender.parameter.cacheHttpClient": true,
  "transport.blocking.http.sender.parameter.Transfer-Encoding": "chunked",
  "transport.blocking.http.sender.parameter.defaultMaxConnectionsPerHost": "200",
  "transport.blocking.http.sender.parameter.OmitSOAP12Action": true,
  "transport.blocking.http.sender.parameter.SO_TIMEOUT": "60000",

  "transport.blocking.http.sender.secured_enable": true,
  "transport.blocking.https.sender.parameter.cacheHttpClient": true,
  "transport.blocking.https.sender.parameter.Transfer-Encoding": "chunked",
  "transport.blocking.https.sender.parameter.defaultMaxConnectionsPerHost": "200",
  "transport.blocking.https.sender.parameter.OmitSOAP12Action": true,
  "transport.blocking.https.sender.parameter.SO_TIMEOUT": "60000",

  "transport.vfs.listener.enable": true,
  "transport.vfs.listener.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.vfs.listener.keystore.type": "$ref{keystore.tls.type}",
  "transport.vfs.listener.keystore.password": "$ref{keystore.tls.password}",
  "transport.vfs.listener.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.vfs.listener.keystore.alias": "$ref{keystore.tls.alias}",
  "transport.vfs.sender.enable": true,

  "transport.msmq.listener.parameter.'msmq.receiver.host'": "$ref{server.hostname}",

  "transport.mqtt.listener.mqttConFactory.parameter.'mqtt.server.host.name'": "$ref{server.hostname}",

  "transport.mail.listener.enable": false,
  "transport.mail.listener.name": "mailto",

  "transport.blocking.mail.listener.enable": true,
  "transport.blocking.mail.listener.name": "mailto",

  "transport.modules": [
    {
      "ref": "addressing"
    }
  ],
  "transport.phase_order": [
    {
      "phase_type": "InFlow",
      "phases": [
        {
          "phase_name": "MsgInObservation",
          "handlers": [
            {
              "handler_name": "TraceMessageBuilderDispatchHandler",
              "handler_class": "org.apache.synapse.transport.passthru.util.TraceMessageBuilderDispatchHandler"
            }
          ]
        },
        {
          "phase_name": "Validation"
        },
        {
          "phase_name": "Transport",
          "handlers": [
            {
              "handler_name": "IntegratorStatefulHandler",
              "handler_class": "org.wso2.micro.integrator.core.handlers.IntegratorStatefulHandler",
              "handler_order_phase": "Transport"
            }, {
              "handler_name": "RelaySecuirtyMessageBuilderDispatchandler",
              "handler_class": "org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler"
            }, {
              "handler_name": "SOAPActionBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher",
              "handler_order_phase": "Transport"
            }
          ]
        }, {
          "phase_name": "Addressing",
          "handlers": [
            {
              "handler_name": "AddressingBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.AddressingBasedDispatcher",
              "handler_order_phase": "Addressing"
            }
          ]
        }, {
          "phase_name": "Security"
        }, {
          "phase_name": "PreDispatch"
        }, {
          "phase_name": "Dispatch",
          "phase_class": "org.apache.axis2.engine.DispatchPhase",
          "handlers": [
            {
              "handler_name": "IntegratorStatefulHandler",
              "handler_class": "org.wso2.micro.integrator.core.handlers.IntegratorStatefulHandler"
            }, {
              "handler_name": "JSONMessageHandler",
              "handler_class": "org.apache.axis2.json.gson.JSONMessageHandler"
            }, {
              "handler_name": "SOAPActionBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher"
            }, {
              "handler_name": "RequestURIOperationDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.RequestURIOperationDispatcher"
            }, {
              "handler_name": "SOAPMessageBodyBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher"
            }, {
              "handler_name": "HTTPLocationBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.HTTPLocationBasedDispatcher"
            }, {
              "handler_name": "SynapseDispatcher",
              "handler_class": "org.apache.synapse.core.axis2.SynapseDispatcher"
            }, {
              "handler_name": "SynapseMustUnderstandHandler",
              "handler_class": "org.apache.synapse.core.axis2.SynapseMustUnderstandHandler"
            }
          ]
        }, {
          "phase_name": "RMPhase"
        }, {
          "phase_name": "OpPhase"
        }, {
          "phase_name": "AuthPhase"
        }, {
          "phase_name": "MUPhase"
        }, {
          "phase_name": "OperationInPhase"
        }
      ]
    }, {
      "phase_type": "OutFlow",
      "phases": [
        {
          "phase_name": "UEPPhase"
        }, {
          "phase_name": "RMPhase"
        }, {
          "phase_name": "MUPhase"
        }, {
          "phase_name": "OpPhase"
        }, {
          "phase_name": "OperationOutPhase"
        }, {
          "phase_name": "PolicyDetermination"
        }, {
          "phase_name": "PTSecurityOutPhase",
          "handlers": [
            {
              "handler_name": "RelaySecuirtyMessageBuilderDispatchandler",
              "handler_class": "org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler"
            }
          ]
        }, {
          "phase_name": "MessageOut"
        }, {
          "phase_name": "Security"
        }, {
          "phase_name": "MsgOutObservation"
        }
      ]
    }, {
      "phase_type": "InFaultFlow",
      "phases": [
        {
          "phase_name": "MsgInObservation"
        }, {
          "phase_name": "Validation"
        }, {
          "phase_name": "Transport",
          "handlers": [
            {
              "handler_name": "IntegratorStatefulHandler",
              "handler_class": "org.wso2.micro.integrator.core.handlers.IntegratorStatefulHandler",
              "handler_order_phase": "Transport"
            }, {
              "handler_name": "SOAPActionBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher",
              "handler_order_phase": "Transport"
            }
          ]
        }, {
          "phase_name": "Addressing",
          "handlers": [
            {
              "handler_name": "AddressingBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.AddressingBasedDispatcher",
              "handler_order_phase": "Addressing"
            }
          ]
        }, {
          "phase_name": "Security"
        }, {
          "phase_name": "PreDispatch"
        }, {
          "phase_name": "Dispatch",
          "phase_class": "org.apache.axis2.engine.DispatchPhase",
          "handlers": [
            {
              "handler_name": "IntegratorStatefulHandler",
              "handler_class": "org.wso2.micro.integrator.core.handlers.IntegratorStatefulHandler"
            }, {
              "handler_name": "SOAPActionBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher"
            }, {
              "handler_name": "RequestURIOperationDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.RequestURIOperationDispatcher"
            }, {
              "handler_name": "SOAPMessageBodyBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher"
            }, {
              "handler_name": "HTTPLocationBasedDispatcher",
              "handler_class": "org.apache.axis2.dispatchers.HTTPLocationBasedDispatcher"
            }
          ]
        }, {
          "phase_name": "RMPhase"
        }, {
          "phase_name": "OpPhase"
        }, {
          "phase_name": "MUPhase"
        }, {
          "phase_name": "OperationInFaultPhase"
        }
      ]
    }, {
      "phase_type": "OutFaultFlow",
      "phases": [
        {
          "phase_name": "UEPPhase"
        }, {
          "phase_name": "RMPhase"
        }, {
          "phase_name": "MUPhase"
        }, {
          "phase_name": "OperationOutFaultPhase"
        }, {
          "phase_name": "PolicyDetermination"
        }, {
          "phase_name": "MessageOut"
        }, {
          "phase_name": "Security"
        }, {
          "phase_name": "Transport"
        }, {
          "phase_name": "MsgOutObservation"
        }
      ]
    }
  ],

  "message_formatters.form_urlencoded": "org.apache.synapse.commons.formatters.XFormURLEncodedFormatter",
  "message_formatters.multipart_form_data": "org.apache.axis2.transport.http.MultipartFormDataFormatter",
  "message_formatters.application_xml": "org.apache.axis2.transport.http.ApplicationXMLFormatter",
  "message_formatters.text_xml":  "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "message_formatters.soap_xml": "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "message_formatters.text_plain": "org.apache.axis2.format.PlainTextFormatter",
  "message_formatters.application_json": "org.wso2.micro.integrator.core.json.JsonStreamFormatter",
  "message_formatters.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishMessageFormatter",
  "message_formatters.text_javascript": "org.apache.axis2.json.JSONMessageFormatter",
  "message_formatters.octet_stream": "org.wso2.carbon.relay.ExpandingMessageFormatter",
  "message_formatters.application_binary": "org.apache.axis2.format.BinaryFormatter",

  "message_builders.application_xml": "org.apache.axis2.builder.ApplicationXMLBuilder",
  "message_builders.form_urlencoded": "org.apache.synapse.commons.builders.XFormURLEncodedBuilder",
  "message_builders.multipart_form_data": "org.apache.axis2.builder.MultipartFormDataBuilder",
  "message_builders.text_plain": "org.apache.axis2.format.PlainTextBuilder",
  "message_builders.application_json": "org.wso2.micro.integrator.core.json.JsonStreamBuilder",
  "message_builders.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishOMBuilder",
  "message_builders.text_javascript": "org.apache.axis2.json.JSONBuilder",
  "message_builders.octet_stream": "org.wso2.carbon.relay.BinaryRelayBuilder",
  "message_builders.application_binary": "org.apache.axis2.format.BinaryBuilder",

  "blocking.message_formatters.form_urlencoded": "org.apache.axis2.transport.http.XFormURLEncodedFormatter",
  "blocking.message_formatters.multipart_form_data": "org.apache.axis2.transport.http.MultipartFormDataFormatter",
  "blocking.message_formatters.application_xml": "org.apache.axis2.transport.http.ApplicationXMLFormatter",
  "blocking.message_formatters.text_xml":  "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "blocking.message_formatters.soap_xml": "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "blocking.message_formatters.text_plain": "org.apache.axis2.format.PlainTextFormatter",
  "blocking.message_formatters.application_json": "org.apache.synapse.commons.json.JsonStreamFormatter",
  "blocking.message_formatters.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishMessageFormatter",
  "blocking.message_formatters.text_javascript": "org.apache.axis2.json.JSONMessageFormatter",
  "blocking.message_formatters.octet_stream": "org.wso2.carbon.relay.ExpandingMessageFormatter",
  "blocking.message_formatters.application_binary": "org.apache.axis2.format.BinaryFormatter",

  "blocking.message_builders.application_xml": "org.apache.axis2.builder.ApplicationXMLBuilder",
  "blocking.message_builders.form_urlencoded": "org.apache.synapse.commons.builders.XFormURLEncodedBuilder",
  "blocking.message_builders.multipart_form_data": "org.apache.axis2.builder.MultipartFormDataBuilder",
  "blocking.message_builders.text_plain": "org.apache.axis2.format.PlainTextBuilder",
  "blocking.message_builders.application_json": "org.apache.synapse.commons.json.JsonStreamBuilder",
  "blocking.message_builders.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishOMBuilder",
  "blocking.message_builders.text_javascript": "org.apache.axis2.json.JSONBuilder",
  "blocking.message_builders.octet_stream": "org.wso2.carbon.relay.BinaryRelayBuilder",
  "blocking.message_builders.application_binary": "org.apache.axis2.format.BinaryBuilder",

  "keystore.tls.file_name": "wso2carbon.jks",
  "keystore.tls.type": "JKS",
  "keystore.tls.password": "wso2carbon",
  "keystore.tls.alias": "wso2carbon",
  "keystore.tls.key_password": "wso2carbon",
  "truststore.file_name": "client-truststore.jks",
  "truststore.type": "JKS",
  "truststore.password": "wso2carbon",
  "encryption.type": "asymmetric",
  "encryption.algorithm": "AES",
  "encryption.alias": "symmetric.key.value",

  "database.enable_config": true,
  "database.enable_gov": true,

  "monitoring.jmx.rmi_registry_port": "9999",
  "monitoring.jmx.rmi_server_port": "11111",
  "monitoring.jmx.rmi_server_start": true,
  "monitoring.jmx.rmi_hostname": "$ref{server.hostname}",

  "monitoring.ei_analytics.server_url": "tcp://localhost:7612",
  "monitoring.ei_analytics.auth_server_url": "ssl://localhost:7712",
  "monitoring.ei_analytics.username": "admin",
  "monitoring.ei_analytics.password": "admin",

  "system.parameter.'org.wso2.CipherTransformation'": "RSA/ECB/OAEPwithSHA1andMGF1Padding",
  "system.parameter.'org.wso2.SecureVaultPasswordRegEx'": "^[\\\\S]{5,30}$",

  "internal_api": [
    {
      "api_name": "PrometheusApi",
      "protocols": "http",
      "class": "org.wso2.micro.integrator.prometheus.publisher.service.MetricAPI"
    },
    {
      "api_name": "ReadinessProbe",
      "protocols": "http",
      "class": "org.wso2.micro.integrator.probes.ReadinessProbe"
    }
  ],

  "management_api.name": "ManagementApi",
  "management_api.protocols": "https",
  "management_api.class": "org.wso2.micro.integrator.management.apis.ManagementInternalApi",
  "management_api_token_handler.enable": "true",
  "management_api.handler.name": "JWTTokenSecurityHandler",
  "management_api.handler.class": "org.wso2.micro.integrator.management.apis.security.handler.JWTTokenSecurityHandler",
  "management_api.handler.token_store_config.max_size": "200",
  "management_api.handler.token_store_config.clean_up_interval": "600",
  "management_api.handler.token_store_config.remove_oldest_token_on_overflow": "true",
  "management_api.handler.token_config.expiry": "3600",
  "management_api.handler.token_config.size": "2048",
  "management_api.handler.user_store.users": [
    {
      "user.name": "admin",
      "user.password": "admin"
    }
  ],

  "management_api.cors.enabled": "true",
  "management_api.cors.allowed_origins": "*",
  "management_api.cors.allowed_headers": "Authorization",
  "management_api_basic_security_handler.enable": "false",
  "management_api.security_handler.name": "BasicSecurityHandler",
  "management_api.security_handler.class": "org.wso2.micro.integrator.management.apis.security.handler.BasicSecurityHandler",
  "internal_api_ssl_config.parameter.sslVerifyClient": "false",
  "internal_api_ssl_config.parameter.httpsProtocols": "TLSv1,TLSv1.1,TLSv1.2",
  "internal_api_ssl_config.parameter.sslProtocol": "SSLV3",
  "internal_api_ssl_config.key_store.location": "repository/resources/security/wso2carbon.jks",
  "internal_api_ssl_config.key_store.type": "JKS",
  "internal_api_ssl_config.key_store.password": "wso2carbon",
  "internal_api_ssl_config.key_store.key_password": "wso2carbon",
  "internal_api_ssl_config.trust_store.location": "repository/resources/security/client-truststore.jks",
  "internal_api_ssl_config.trust_store.type": "JKS",
  "internal_api_ssl_config.trust_store.password": "wso2carbon",
  "internal_api_ssl_config.certificate_revocation_verifier_enabled": "false",
  "internal_api_ssl_config.certificate_revocation_verifier": {
    "cache_size": "10",
    "cache_delay": "2"
  }

}
