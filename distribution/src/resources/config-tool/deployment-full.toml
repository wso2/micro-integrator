[server]

# carbon.xml file
hostname = "localhost"
offset  = 0     # inferred
hide_admin_service_wsdl = true #inferred

# axis2.xml file
enable_mtom = false # optional  default: false
enable_swa = false # optional   default: false
userAgent = "WSO2 ${product.key} ${product.version}"    #inferred
serverDetails = "WSO2 ${product.key} ${product.version}"    #inferred
synapse_config_file_path = "repository/deployment/server/synapse-configs"  #inferred no docs for the end user

# swagger handlers in carbon.xml file
[[server.get_request_processor]]
item = "swagger.json"
class = "org.wso2.micro.integrator.transport.handlers.requestprocessors.swagger.format.SwaggerJsonProcessor"

[[server.get_request_processor]]
item = "swagger.yaml"
class = "org.wso2.micro.integrator.transport.handlers.requestprocessors.swagger.format.SwaggerYamlProcessor"


[encryption]
#carbon.xml
internal_crypto_provider = "org.wso2.micro.integrator.crypto.provider.KeyStoreBasedInternalCryptoProvider" #inferred
key = "SECRET_KEY" # inferred

[super_admin]
#usr-mgt.xml
username = "admin"              # inferred
password = "admin"              # inferred
admin_role = "admin"            # inferred
create_admin_account = true     # inferred

[realm_manager]
#usr-mgt.xml
data_source = "WSO2CarbonDB"       # inferred
properties.isCascadeDeleteEnabled = true    #inferred

[user_store]
#usr-mgt.xml
class = "org.wso2.micro.integrator.security.user.core.ldap.ReadOnlyLDAPUserStoreManager" # inferred
connection_url = "ldap://localhost:10389"   #inferred
connection_name = "uid=admin,ou=system"   #inferred
connection_password = "admin"   #inferred
anonymous_bind = false   #inferred
user_search_base = "ou=system"   #inferred
user_name_attribute = "uid"   #inferred
user_name_search_filter = "(&amp;(objectClass=person)(uid=?))"   #inferred
user_name_list_filter = "(objectClass=person)"   #inferred
display_name_attribute = ''     # empty by default
read_groups = true   #inferred
group_search_base = "ou=system"   #inferred
group_name_attribute = "cn"   #inferred
group_name_search_filter = "(&amp;(objectClass=groupOfNames)(cn=?))"   #inferred
group_name_list_filter = "(objectClass=groupOfNames)"   #inferred
membership_attribute = "member"   #inferred
back_links_enabled = false   #inferred
username_java_regex = "[a-zA-Z0-9._\\-|//]{3,30}$"   #inferred
rolename_java_regex = "[a-zA-Z0-9._\\-|//]{3,30}$"   #inferred
password_java_regex = "^[\\S]{5,30}$"   #inferred
scim_enabled = false   #inferred
password_hash_method = "PLAIN_TEXT"   #inferred
multi_attribute_separator = ","   #inferred
max_user_name_list_length = 100   #inferred
max_role_name_list_length = 100   #inferred
user_roles_cache_enabled = true   #inferred
connection_pooling_enabled = true   #inferred
ldap_connection_timeout = 5000   #inferred          timeout in milliseconds
read_timeout = '' # empty by default
retry_attempts = '' # empty by default
replace_escape_characters_at_user_login = true   #inferred

########################## Massege builders and formatters ###################################

[message_formatters]
form_urlencoded =  "org.apache.synapse.commons.formatters.XFormURLEncodedFormatter"
multipart_form_data =  "org.apache.axis2.transport.http.MultipartFormDataFormatter"
application_xml = "org.apache.axis2.transport.http.ApplicationXMLFormatter"
text_xml = "org.apache.axis2.transport.http.SOAPMessageFormatter"
soap_xml = "org.apache.axis2.transport.http.SOAPMessageFormatter"
text_plain = "org.apache.axis2.format.PlainTextFormatter"
application_json =  "org.wso2.micro.integrator.core.json.JsonStreamFormatter"
json_badgerfish = "org.apache.axis2.json.JSONBadgerfishMessageFormatter"
text_javascript = "org.apache.axis2.json.JSONMessageFormatter"
octet_stream = "org.wso2.carbon.relay.ExpandingMessageFormatter"
application_binary =  "org.apache.axis2.format.BinaryFormatter"

[message_builders]
application_xml = "org.apache.axis2.builder.ApplicationXMLBuilder"
form_urlencoded = "org.apache.synapse.commons.builders.XFormURLEncodedBuilder"
multipart_form_data = "org.apache.axis2.builder.MultipartFormDataBuilder"
text_plain = "org.apache.axis2.format.PlainTextBuilder"
application_json = "org.wso2.micro.integrator.core.json.JsonStreamBuilder"
json_badgerfish = "org.apache.axis2.json.JSONBadgerfishOMBuilder"
text_javascript = "org.apache.axis2.json.JSONBuilder"
octet_stream =  "org.wso2.carbon.relay.BinaryRelayBuilder"
application_binary = "org.apache.axis2.format.BinaryBuilder"

[[custom_message_formatters]]
content_type = "application/json/badgerfish"
class = "org.apache.axis2.json.JSONBadgerfishMessageFormatter"

[[custom_message_builders]]
content_type = "application/json/badgerfish"
class = "org.apache.axis2.json.JSONBadgerfishOMBuilder"

################## Massege builders and formatters for blocking transport #########################
[message_formatters.blocking]
form_urlencoded =  "org.apache.synapse.commons.formatters.XFormURLEncodedFormatter"
multipart_form_data =  "org.apache.axis2.transport.http.MultipartFormDataFormatter"
application_xml = "org.apache.axis2.transport.http.ApplicationXMLFormatter"
text_xml = "org.apache.axis2.transport.http.SOAPMessageFormatter"
soap_xml = "org.apache.axis2.transport.http.SOAPMessageFormatter"
text_plain = "org.apache.axis2.format.PlainTextFormatter"
application_json =  "org.wso2.micro.integrator.core.json.JsonStreamFormatter"
json_badgerfish = "org.apache.axis2.json.JSONBadgerfishMessageFormatter"
text_javascript = "org.apache.axis2.json.JSONMessageFormatter"
octet_stream = "org.wso2.carbon.relay.ExpandingMessageFormatter"
application_binary =  "org.apache.axis2.format.BinaryFormatter"

[message_builders.blocking]
application_xml = "org.apache.axis2.builder.ApplicationXMLBuilder"
form_urlencoded = "org.apache.synapse.commons.builders.XFormURLEncodedBuilder"
multipart_form_data = "org.apache.axis2.builder.MultipartFormDataBuilder"
text_plain = "org.apache.axis2.format.PlainTextBuilder"
application_json = "org.wso2.micro.integrator.core.json.JsonStreamBuilder"
json_badgerfish = "org.apache.axis2.json.JSONBadgerfishOMBuilder"
text_javascript = "org.apache.axis2.json.JSONBuilder"
octet_stream =  "org.wso2.carbon.relay.BinaryRelayBuilder"
application_binary = "org.apache.axis2.format.BinaryBuilder"

[[custom_message_formatters.blocking]]
content_type = "application/json/badgerfish"
class = "org.apache.axis2.json.JSONBadgerfishMessageFormatter"

[[custom_message_builders.blocking]]
content_type = "application/json/badgerfish"
class = "org.apache.axis2.json.JSONBadgerfishOMBuilder"

[transport]
default_content_type = "empty/content"

########################## Passthroug http/https configurations ###################################
[transport.http] # Optional

socket_timeout = 180000              # inferred default: 180000    timeout in milliseconds
core_worker_pool_size = 400         # inferred default: 400
max_worker_pool_size = 400          # inferred default: 400
worker_pool_queue_length = -1
io_buffer_size = 16384              # inferred default: 16384
max_http_connection_per_host_port = 32767
preserve_http_user_agent = false
preserve_http_server_name = true
preserve_http_headers = ["Content-Type"]  # inferred todo , sepereated or | seperated ?
disable_connection_keepalive = false      # Keep this in deployment.toml file
enable_message_size_validation = false
max_message_size_bytes = 81920
max_open_connections = -1           # inferred default: -1
force_xml_validation = false
force_json_validation = false

listener.enable = true                       # inferred default true
listener.port = 8280    #inferred  default: 8280
listener.wsdl_epr_prefix ="$ref{server.hostname}:8280/test"
listener.bind_address = "$ref{server.hostname}"

listener.secured_enable = true              # inferred default true
listener.secured_port = 8243        # infered  default: 8243
listener.secured_wsdl_epr_prefix = "$ref{server.hostname}"  # no default
listener.secured_bind_address = "$ref{server.hostname}"
listener.secured_protocols = "TLSv1,TLSv1.1,TLSv1.2" # inferred default: TLSv1,TLSv1.1,TLSv1.2
listener.verify_client = "require"              # inferred disable by default, mutual ssl   optional/required/none
listener.ssl_profile.file_path = "conf/sslprofiles/listenerprofiles.xml" # type 0
listener.ssl_profile.read_interval = 3600000       # inferred in milliseconds
# todo need to template for wich tranport ?
listener.preferred_ciphers = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
listener.certificate_revocation_verifier_enable = false # false by default
listener.certificate_revocation_cache_size = 1024     # inferred
listener.certificate_revocation_cache_delay = 1000     # inferred

listener.keystore.file_name ="$ref{keystore.tls.file_name}" # inferred
listener.keystore.type = "$ref{keystore.tls.type}" # inferred
listener.keystore.password = "$ref{keystore.tls.password}" # inferred
listener.keystore.key_password = "$ref{keystore.tls.key_password}" # inferred
listener.truststore.file_name = "$ref{truststore.file_name}" # inferred
listener.truststore.type = "$ref{truststore.type}" # inferred
listener.truststore.password = "$ref{truststore.password}" # inferred

sender.enable = true        # inferred default true
sender.warn_on_http_500 = "*"       # optional
sender.proxy_host = "$ref{server.hostname}"
sender.proxy_port = 3128
sender.non_proxy_hosts = ["$ref{server.hostname}"]
sender.hostname_verifier = "AllowAll"
sender.certificate_revocation_verifier_enable = false # false by default
sender.certificate_revocation_cache_size = 1024     # inferred
sender.certificate_revocation_cache_delay = 1000     # inferred delay in milliseconds

sender.secured_enable = true                # inferred default true
sender.keystore.file_name ="$ref{keystore.tls.file_name}" # inferred
sender.keystore.type = "$ref{keystore.tls.type}" # inferred
sender.keystore.password = "$ref{keystore.tls.password}" # inferred
sender.keystore.key_password = "$ref{keystore.tls.key_password}" # inferred
sender.truststore.file_name = "$ref{truststore.file_name}" # inferred
sender.truststore.type = "$ref{truststore.type}" # inferred
sender.truststore.password = "$ref{truststore.password}" # inferred

sender.ssl_profile.file_path = "conf/sslprofiles/senderprofiles.xml"
sender.ssl_profile.read_interval = 600000   # inferred interval in milliseconds

[[transport.http.proxy_profile]]
target_hosts = ["example.com", ".*.sample.com"]
proxy_host = "localhost"
proxy_port = "3128"
proxy_username = "squidUser"
proxy_password = "password"
bypass_hosts = ["xxx.sample.com"]

[[transport.http.secured_proxy_profile]]
target_hosts = ["example.com", ".*.sample.com"]
proxy_host = "localhost"
proxy_port = "3128"
proxy_username = "squidUser"
proxy_password = "password"
bypass_hosts = ["xxx.sample.com"]

########################## Passthroug http/https configurations ###################################

[transport.blocking.http] # Optional
# common for http/https
sender.enable_client_caching = true
sender.transfer_encoding = "chunked"
sender.default_connections_per_host = 200
sender.omit_soap12_action = true
sender.so_timeout = 60000 # inferred timeout in milliseconds

###################################   VFS configurations              ###################################
[transport.vfs] # enable by default

listener.enable = true
listener.keystore.file_name = "$ref{keystore.tls.file_name}"  # inferred
listener.keystore.type = "$ref{keystore.tls.type}"                   # inferred
listener.keystore.password = "$ref{keystore.tls.password}"           # inferred
listener.keystore.key_password = "$ref{keystore.tls.key_password}"   # inferred
listener.keystore.alias = "$ref{keystore.tls.alias}"                 # inferred
sender.enable = true

################################### FIX transport configurations      ###################################
[transport.fix] # optional

listener.enable = false         # false by default
sender.enable = false           # false by default

################################### Custom transport configurations   ###################################

[[custom_transport.listener]]

class="<qualified class name>"
protocol = "ISO8583"
parameter.port = 8081
parameter.hostname = "$ref{server.hostname}"
parameter.non_blocking = true
parameter.bind_address = "$ref{server.hostname}"
parameter.wsdl_epr_prefix = "$ref{server.hostname}"  # inferred

keystore.file_name = "$ref{keystore.tls.file_name}"
keystore.type = "$ref{keystore.tls.type}"
keystore.password = "$ref{keystore.tls.password}"
keystore.key_password = "$ref{keystore.tls.key_password}"
truststore.file_name = "$ref{truststore.file_name}"
truststore.type = "$ref{truststore.type}"
truststore.password = "$ref{truststore.password}"

ssl_profile.file_path= "conf/sslprofiles/listenerprofiles.xml"
ssl_profile.read_interval = 30000       # interval in milliseconds

[[custom_transport.sender]]

class="<qualified class name>"
protocol = "ISO8583"
parameter.proxy_host = ""
parameter.proxy_port = 9000
parameter.non_proxy_host = ""
parameter.non_blocking = true

keystore.file_name = "$ref{keystore.tls.file_name}"
keystore.type = "$ref{keystore.tls.type}"
keystore.password = "$ref{keystore.tls.password}"
keystore.key_password = "$ref{keystore.tls.key_password}"
truststore.file_name = "$ref{truststore.file_name}"
truststore.type = "$ref{truststore.type}"
truststore.password = "$ref{truststore.password}"

ssl_profile.file_path = "conf/sslprofiles/senderprofiles.xml"
ssl_profile.read_interval = 30000       # interval in milliseconds

[transport]
default_content_type = "empty/content"


###################################     Mail transport configurations   ###################################
[transport.mail.listener]
enable = true
name = "mailto"         # inferred

[[transport.mail.sender]]

name = "mailto"
parameter.hostname = "smtp.gmail.com"
parameter.port = "587"
parameter.enable_tls = true
parameter.auth = true
parameter.username = "demo_user"
parameter.password = "mailpassword"
parameter.from = "demo_user@wso2.com"

###################################     JSM Transport Configurations    ###################################
[[transport.jms.listener]]

name = "myTopicListener"
parameter.initial_naming_factory = "org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory"
parameter.broker_name = "artemis"                   # todo broker_name ?
parameter.provider_url = "tcp://localhost:61616"
parameter.connection_factory_name = "TopicConnectionFactory"
parameter.connection_factory_type = "topic" # [queue, topic]
parameter.cache_level = "consumer"

parameter.naming_security_principal = ""
parameter.naming_security_credential = ""
parameter.transactionality = ""
parameter.transaction_jndi_name = ""
parameter.cache_user_transaction = true
parameter.session_transaction = true
parameter.session_acknowledgement = "AUTO_ACKNOWLEDGE"
parameter.jms_spec_version = "1.1"
parameter.username = ""
parameter.password = ""
parameter.destination = ""
parameter.destination_type = "queue" # queue/topic
parameter.default_reply_destination = ""
parameter.default_destination_type = "queue" # queue/topic
parameter.message_selector = ""
parameter.subscription_durable = false
parameter.durable_subscriber_client_id = ""
parameter.durable_subscriber_name = ""
parameter.pub_sub_local = false
parameter.receive_timeout = "1000"              # timeout in milliseconds
parameter.concurrent_consumer = 1
parameter.max_concurrent_consumer = 1
parameter.idle_task_limit = 10
parameter.max_message_per_task = -1
parameter.initial_reconnection_duration = "10000"       # duraton in milliseconds
parameter.reconnect_progress_factor = 2
parameter.max_reconnect_duration = "3600000"            # duration in milliseconds
parameter.reconnect_interval = "3600000"                # duration in milliseconds
parameter.max_jsm_connection = 10
parameter.max_consumer_error_retrieve_before_delay = 20
parameter.consume_error_delay = "100"                   # delay in milliseconds
parameter.consume_error_progression = "2.0"

[[transport.jms.sender]]

name = "myTopicSender"
parameter.initial_naming_factory = "org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory"
parameter.broker_name = "artemis"
parameter.provider_url = "tcp://localhost:61616"
parameter.connection_factory_name = "TopicConnectionFactory"
parameter.connection_factory_type = "topic"
parameter.cache_level = "producer"

parameter.naming_security_principal = ""
parameter.naming_security_credential = ""
parameter.transactionality = ""
parameter.transaction_jndi_name = ""
parameter.cache_user_transaction = true
parameter.session_transaction = true
parameter.session_acknowledgement = "AUTO_ACKNOWLEDGE"
parameter.jms_spec_version = "1.1"
parameter.username = ""
parameter.password = ""
parameter.destination = ""
parameter.destination_type = "queue" # queue/topic
parameter.default_reply_destination = ""
parameter.default_destination_type = "queue" # queue/topic
parameter.message_selector = ""
parameter.subscription_durable = false
parameter.durable_subscriber_client_id = ""
parameter.durable_subscriber_name = ""
parameter.pub_sub_local = false
parameter.receive_timeout = "1000"      # timout in milliseconds
parameter.concurrent_consumer = 1
parameter.max_concurrent_consumer = 1
parameter.idle_task_limit = 10
parameter.max_message_per_task = -1
parameter.initial_reconnection_duration = "10000"     # duration in milliseconds
parameter.reconnect_progress_factor = 2
parameter.max_reconnect_duration = "3600000"          # duration in milliseconds
parameter.reconnect_interval = "3600000"                # duration in milliseconds
parameter.max_jsm_connection = 10
parameter.max_consumer_error_retrieve_before_delay = 20
parameter.consume_error_delay = "100"       # delay in milliseconds
parameter.consume_error_progression = "2.0"

parameter.vender_class_loader = false       # only for IBM MQ       todo tempated only for sender?

# todo reveiw
###################################     JNDI property configuration     ###################################
[transport.jndi.connection_factories]       # todo hardcode defaults ?
QueueConnectionFactory = "amqp://admin:admin@clientID/carbon?brokerlist='tcp://localhost:5675'"
TopicConnectionFactory = "amqp://admin:admin@clientID/carbon?brokerlist='tcp://localhost:5675'"

[transport.jndi.queue]
JMSMS = "JMSMS"
StockQuotesQueue = "StockQuotesQueue"

[transport.jndi.topic]
MyTopic = "example.MyTopic"

###################################     Rabbit MQ configurations        ###################################
[[transport.rabbitmq.listener]]

name = "rabbitMQListener"
parameter.hostname = "localhost"
parameter.port = 5672
parameter.username = "guest"
parameter.password = "guest"
parameter.connection_factory = ""
parameter.exchange_name = "amq.direct"
parameter.queue_name = "MyQueue"
parameter.queue_auto_ack = false
parameter.consumer_tag = ""
parameter.channel_consumer_qos = ""
parameter.durable = ""
parameter.queue_exclusive = ""
parameter.queue_auto_delete = ""
parameter.queue_routing_key = ""
parameter.queue_auto_declare = ""
parameter.exchange_auto_declare = ""
parameter.exchange_type = ""
parameter.exchange_durable = ""
parameter.exchange_auto_delete = ""
parameter.message_content_type = ""

parameter.retry_interval = "10000"        #in case of network failure interval in milliseconds
parameter.retry_count = 5               #in case of network failure
parameter.connection_pool_size = 25

parameter.ssl_enable = true
parameter.ssl_version = "SSL"
parameter.keystore_file_name ="$ref{keystore.tls.file_name}" # inferred
parameter.keystore_type = "$ref{keystore.tls.type}" # inferred
parameter.keystore_password = "$ref{keystore.tls.password}" # inferred
parameter.truststore_file_name ="$ref{truststore.file_name}" # inferred
parameter.truststore_type = "$ref{truststore.type}" # inferred
parameter.truststore_password = "$ref{truststore.password}" # inferred

[[transport.rabbitmq.sender]]

name = "rabbitMQSender"
parameter.hostname = "localhost"
parameter.port = 5672
parameter.username = "guest"
parameter.password = "guest"
parameter.exchange_name = "amq.direct"
parameter.routing_key = "MyQueue"
parameter.reply_to_name = ""
parameter.queue_delivery_mode = 1 # 1/2
parameter.exchange_type = ""
parameter.queue_name = "MyQueue"
parameter.queue_durable = false
parameter.queue_exclusive = false
parameter.queue_auto_delete = false
parameter.exchange_durable = ""
parameter.queue_auto_declare = ""
parameter.exchange_auto_declare = ""
parameter.connection_pool_size = 10

################################### Websocket transport configuration ###################################
[transport.ws]

sender.enable = false
sender.parameter.outflow_dispatch_sequence = "outflowDispatchSeq"               # inferred
sender.parameter.outflow_dispatch_fault_sequence = "outflowFaultSeq"            # inferred

[transport.wss]

sender.enable = false
sender.parameter.outflow_dispatch_sequence = "outflowDispatchSeq"               # inferred
sender.parameter.outflow_dispatch_fault_sequence = "outflowFaultSeq"            # inferred
sender.truststore_location = "$ref{truststore.file_name}" # inferred
sender.truststore_password = "$ref{truststore.password}" # inferred

###################################     SAP configurations          ###################################
[transport.sap] # optional

listener.enable = true
listener.idoc.class = "org.wso2.carbon.transports.sap.SAPTransportListener" # inferred
listener.bapi.class = "org.wso2.carbon.transports.sap.SAPTransportListener" # inferred
sender.enable = true
sender.idoc.class = "org.wso2.carbon.transports.sap.SAPTransportSender" # inferred
sender.bapi.class = "org.wso2.carbon.transports.sap.SAPTransportSender" # inferred


###################################     TCP configurations          ###################################
[transport.tcp]

listener.enable = false
listener.port = 8000
listener.hostname = "$ref{server.hostname}"
listener.content_type = ["application/xml"]
listener.response_client = true
sender.enable = true

###################################     UDP configurations          ###################################
[transport.udp]

listener.enable = false
sender.enable =false

###################################     MSMQ configurations         ###################################
[transport.msmq]

listener.enable = false
listener.hostname = "$ref{server.hostname}"   # inferred
sender.enable = false

###################################     MQTT configuration          ###################################
[transport.mqtt]

listener.enable = false
listener.parameter.hostname = "$ref{server.hostname}"   # inferred
listener.parameter.connection_factory = "mqttConFactory"                      # todo ? loked=false
listener.parameter.server_port = 1883
listener.parameter.client_id = "client-id-1234"
listener.parameter.topic_name = "esb.test"

# not reqired parameter list
listener.parameter.subscription_qos = 0       # 0,1,2
listener.parameter.session_clean = false
listener.parameter.enable_ssl = false
listener.parameter.subscription_username = ""
listener.parameter.subscription_password = ""
listener.parameter.temporary_store_directory = ""
listener.parameter.blocking_sender = false                # todo does blocking sender axis configuration?
listener.parameter.connect_type = "text/plain"
listener.parameter.message_retained = false

sender.enable = false

###################################     Http servlet                ###################################

# todo ??
###################################     Carbon properties           ###################################
[system.parameter]
'org.wso2.CipherTransformation' = "RSA/ECB/OAEPwithSHA1andMGF1Padding"

###################################     Synapse configurations      ###################################

[mediation]
# synapse.properties
synapse.core_threads = 20
synapse.max_threads = 100
synapse.threads_queue_length = 10

synapse.global_timeout_interval = "120000"  # interval in milliseconds

# Uncomment following to support fallback XPATH 2.0 support with DOM and Saxon
synapse.enable_xpath_dom_failover=true
synapse.temp_data_chunk_size=3072

#configuration for the external debugger channels if server is started in debug mode
synapse.command_debugger_port=9005
synapse.event_debugger_port=9006

# Script Mediator Pool (impatcts only external scripts)
synapse.script_mediator_pool_size=15
synapse.enable_xml_nil=false
synapse.disable_auto_primitive_regex = "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$"
synapse.disable_custom_replace_regex = "@@@"
synapse.enable_namespace_declaration = false
synapse.build_valid_nc_name = false
synapse.enable_auto_primitive = false
synapse.json_out_auto_array = false
synapse.preserve_namespace_on_xml_to_json=false

# Configuration to enable mediation flow analytics
flow.statistics.enable=false
flow.statistics.capture_all=false

#In memory statistics cleaning state
statistics.enable_clean=true
statistics.clean_interval = 1000    # interval in milliseconds

flow.statistics.tracer.collect_payloads=false
flow.statistics.tracer.collect_properties=false

inbound.core_threads = 20
inbound.max_threads = 100

###################################   Database configurations   ###################################
[[datasource]]
id = "WSO2_CARBON_DB"
url= "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000"
username="username"
password="password"
driver="org.h2.Driver"
pool_options.maxActive=50
pool_options.maxWait = 60000 # wait in milliseconds
pool_options.testOnBorrow = true

###################################   Schedule task configurations   ###################################
[tasks]
mode = "AUTO"   #inferred STANDALONE, CLUSTERED, REMOTE, AUTO
client_dispatch_address = "https://$ref{server.hostname}:9448"  # inferred
server_address = "https://$ref{server.hostname}:9443"   # inferred
server_count = 1    # inferred
server_username = "admin"               # inferred
server_password = "admin"               # inferred

resolver_type = "RoundRobin" # inferred         RoundRobin/Random/RuleBased
rules = ["HIVE_TASK,HTTP_SCRIPT.*,192.168.1.*", "HIVE_TASK,.*,192.168.2.*"]     # only applied for RuleBased type

###################################     Keystore configurations     ###################################
[keystore.tls]
file_name = "wso2carbon.jks"        # infered
type = "JKS"                        # infered
password = "wso2carbon"             # infered
alias = "wso2carbon"                # infered
key_password = "wso2carbon"         # infered

[truststore]
file_name = "client-truststore.jks"        # infered
type = "JKS"                        # infered
password = "wso2carbon"             # infered
alias = "symmetric.key.value"       # infered
algorithm = "AES"                   # infered

[keystore.internal]
file_name = "$ref{keystore.tls.file_name}"  # inferred
type = "$ref{keystore.tls.type}"            # inferred
password = "$ref{keystore.tls.password}"    # inferred
alias = "$ref{keystore.tls.alias}"          # inferred
key_password = "$ref{keystore.tls.key_password}"    # inferred

##################################### Hidden properties with no documentations ###################################

[[server.get_request_processor]]    # hidden property
#carbon.xml
item = "swagger.json"
class = "org.wso2.appcloud.api.swagger.processors.json.SwaggerJsonProcessor"

[transport.local]       # hidden property
#axis2.xml
sender.nonblocking.enable = false

[[transport.parameters]]    # custom parameters for axis2 transport
name="ok"
value="abcd"

[[transport.modules]]   # all modules should be defined here including defaults
ref="addressing"
ref="another"

[[transport.phase_order]]
phase_type= "InFlow"

[[transport.phase_order.phases]]
phase_name="MsgInObservation"

[[transport.phase_orders.phases.handlers]]
handler_name="TraceMessageBuilderDispatchHandler"
handler_class="org.apache.synapse.transport.passthru.util.TraceMessageBuilderDispatchHandler"

[[transport.phase_order.phases]]
phase_name="Transport"
phase_class="phase class"

[[transport.phase_order.phases.handlers]]
handler_name="IntegratorStatefulHandler"
handler_class="org.wso2.micro.integrator.core.handlers.IntegratorStatefulHandler"
handler_order_phase="Transport"
order_before="before"
order_after="after"
order_phase_first="phasefirst"
order_phase_last="phaselast"