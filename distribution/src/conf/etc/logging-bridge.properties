############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
#   NOTE: this configuration file use to get the handler list,
#   Properties(except level property) define for each handler
#   may be not available because LogRecords handover to log4j
#   appenders in runtime.
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler
# Add org.wso2.carbon.bootstrap.logging.handlers.LogEventHandler to handlers if you need to push java logs to LOGEVENT appender

handlers=  org.wso2.carbon.bootstrap.logging.handlers.LoggingConsoleHandler, org.wso2.carbon.bootstrap.logging.handlers.LoggingFileHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
#

############################################################
# This FileHandler pushed LogRecords to a log4j FileAppander in runtime
org.wso2.carbon.bootstrap.logging.handlers.LoggingFileHandler.level = INFO
#org.wso2.carbon.bootstrap.logging.handlers.LoggingFileHandler.formatter = java.util.logging.SimpleFormatter

# This ConsoleHandler pushed LogRecords to q log4j ConsoleAppander in runtime
org.wso2.carbon.bootstrap.logging.handlers.LoggingConsoleHandler.level = INFO
#org.wso2.carbon.bootstrap.logging.handlers.LoggingConsoleHandler.formatter = java.util.logging.SimpleFormatter


############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
#com.xyz.foo.level = SEVERE
org.apache.coyote.level = SEVERE
org.apache.catalina.level = SEVERE
com.hazelcast.level = SEVERE
Owasp.CsrfGuard.level = WARNING
org.apache.tomcat.util.net.NioSelectorPool.level = WARNING

